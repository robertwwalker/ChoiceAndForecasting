{
  "hash": "0f85fe5a1eb57977316b1a90e94552ff",
  "result": {
    "markdown": "---\ntitle: \"Week 9: Features and Decomposing Time\"\nauthor: \"Robert W. Walker\"\ndate: \"2022-10-31\"\ncategories: [R]\nimage: \"image.png\"\ntoc: true\nexecute: \n  echo: fenced\n---\n\n\nThe slides [are here.](https://robertwwalker.github.io/xaringan/CMF-Week-9/index.html).\n\nOur ninth class meeting will focus on [Chapter 3](https://otexts.com/fpp3/decomposition.html) and [Chapter 4](https://otexts.com/fpp3/features.html)  of __Forecasting: Principles and Practice [3rd edition]__. \n\n\n\n\n\n\nAll of the data for today, including computations, can be acquired using \n\n```\nload(url(\"https://github.com/robertwwalker/xaringan/raw/master/CMF-Week-9/data/FullWorkspace.RData\"))\n```\n\n# Inflation Expectations\n\n\n::: {.cell}\n\n````{.cell-code}\n```{{r}}\nlibrary(tidyverse)\nlibrary(lubridate); library(tsibble)\nlibrary(readxl)\nurl <- \"https://www.newyorkfed.org/medialibrary/interactives/sce/sce/downloads/data/frbny-sce-data.xls\"\ndestfile <- \"frbny_sce_data.xls\"\ncurl::curl_download(url, destfile)\nInflation.Expectations <- read_excel(destfile, sheet=4, skip=3) %>%\n  rename(date = 1) %>% \n  mutate(date = yearmonth(parse_date_time(date, orders = \"%Y%m\")))\n```\n````\n:::\n\n::: {.cell}\n\n````{.cell-code}\n```{{r}}\nlibrary(fpp3)\nInflation.Expectations %>% \n  as_tsibble(index=date) %>% \n  autoplot(`Median three-year ahead expected inflation rate`) + \n  geom_line(aes(y=Inflation.Expectations$`Median one-year ahead expected inflation rate`, color=\"red\")) +\n  hrbrthemes::theme_ipsum() + guides(color = \"none\") + labs(y=\"Median Inflation Expectations: 1 year (red) and 3 year (black)\")\n```\n````\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-2-1.png){width=672}\n:::\n:::\n\n\nA nicer plot.\n\n\n::: {.cell}\n\n````{.cell-code}\n```{{r}}\nInflation.Expectations %>% \n  select(1:3) %>% \n  pivot_longer(c(2:3)) %>%\n  mutate(Variable = name) %>%\n  ggplot(aes(x=date, y=value, color=Variable)) +\n  geom_line(size=2) +\n  scale_color_viridis_d(option=\"C\") +\n  hrbrthemes::theme_ipsum_rc() +\n  theme(legend.position = \"bottom\") +\n  labs(y=\"Inflation Expectations\", \n       color=\"\",\n       title=\"New York Fed Inflation Expectations\",\n       caption = \"data: https://www.newyorkfed.org/medialibrary/interactives/sce/sce/downloads/data/frbny-sce-data.xlsx\")\n```\n````\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-3-1.png){width=672}\n:::\n:::\n\n\n## Decompositions\n\n### Classical Decomposition\n\nThe key difference between the two decompositions, and there are others, is the existence [or lack thereof] of a window.  In the classical decomposition, there is almost no flexibility.\n\n\n::: {.cell}\n\n````{.cell-code}\n```{{r}}\nInflation.Expectations %>% \n  as_tsibble(index=date) %>% \n  model(stl = classical_decomposition(`Median one-year ahead expected inflation rate` ~ season(12))) %>%\n  components() %>% \n  autoplot()\n```\n````\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-4-1.png){width=672}\n:::\n:::\n\n\n### STL Decomposition\n\nThe key new element to the STL decomposition is the `window` argument.  Over how many time periods should the trend/season be calculated.  If one wishes to average over all periods, `window=\"periodic\"` is the necessary syntax.\n\n\n::: {.cell}\n\n````{.cell-code}\n```{{r}}\nInflation.Expectations %>% \n  as_tsibble(index=date) %>% \n  model(STL(`Median one-year ahead expected inflation rate`)) %>%\n  components() %>% \n  autoplot()\n```\n````\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n:::\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}